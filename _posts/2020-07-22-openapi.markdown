---
layout: post
title:  "기타 기능 - OPEN API 이용"
---
<br>
## ※ OPEN API 개관 및 주요 메서드<br>
 ![Gatok Jekyll Theme]({{site.baseurl}}/images/7-1.PNG)<br>
<br><br>
 ![Gatok Jekyll Theme]({{site.baseurl}}/images/7-2.PNG)<br>
<br><br>
 OPEN API란 웹페이지 제작에 유용하게 사용할 수 있는<br>
 누구에게나 오픈된 API를 말하며, <br>
 본 게시판은 공공데이터포털의 미세먼지 API를 사용하였다<br>
<br>
 <br>
 VIEW단 처리<br>
 <br>
 ~~~c
 <div class="searchi" align="center">
	<br> <h4><b>현 시각 미세먼지 정보</b></h4>
	<p id="show"></p>
	<div>
	 <table>
	  <tr>
	  <th>원종동</th> // 테스트를 위해 원종동으로 고정
	  <th>&nbsp;${finedust.value}</th> // 미세먼지 수치
	  <th>&nbsp;${finedust.status} // 미세먼지 상태
	   <c:if test="${finedust.status=='좋음'}"> // 상태에 따라 표시되는 아이콘이 다름
	   <img src="/resources/img/1.png" width="30px" height="30px" id="header">
	   </c:if>
	   <c:if test="${finedust.status=='보통'}">
	   <img src="/resources/img/2.png" width="30px" height="30px" id="header">
	   </c:if>
	   <c:if test="${finedust.status=='나쁨'}">
	   <img src="/resources/img/3.png" width="30px" height="30px" id="header">
	   </c:if> 
	  </th>
	  </tr>
	 </table>
	</div>
</div>
 ~~~
<br><br>
 컨트롤러 처리
<br>
~~~c
 // api.java
public class api {


  public Finedust getFinddust() {
	  
	  Finedust fd = new Finedust(); // 수치(value)와 상태(status)를 담을 VO
	  
	  BufferedReader br = null; // OPEN API로 얻어온 데이터를 읽기 위한 입력 스트림
      try{            
          String urlstr = "http://openapi.airkorea.or.kr/openapi/services/rest/ArpltnInforInqireSvc/....(생략)";
          URL url = new URL(urlstr); // OPEN API URL 생성
          HttpURLConnection urlconnection = (HttpURLConnection) url.openConnection(); // 입력 스트림을 얻기위해 커넥션을 생성
          urlconnection.setRequestMethod("GET");
          br = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(),"UTF-8"));
          String result = "";
          String status = "";
          String line;
          while((line = br.readLine()) != null) { // API 데이터를 한줄씩 읽는다
        	  if(line.contains("pm10Value")) {
        		  result = line;
        		  int start = result.indexOf(">");
        		  int end = line.indexOf("<", start);
        		result = result.substring(start+1,end); // 미세먼지 수치를 얻기위해 String.substring을 이용
                  break;  
        	  }     
          }// 미세먼지 값 추출
        int value = Integer.parseInt(result); // String 값을 int로 파싱함
        if(value <= 30) { // 미세먼지 수치에 따른 status 생성
        	status += "좋음";
        }
        else if(value <=80) {
        	status += "보통";
        }
        else {
        	status += "나쁨";
        }
        fd.setStatus(status);
        fd.setValue(value);
      }catch(Exception e){
          System.out.println(e.getMessage());
      }	  
	  return fd;
  }
  
}
~~~
   <br>
 <br>
  
## ※ 실기 영상<br>
 <br>
  ![Gatok Jekyll Theme]({{site.baseurl}}/images/7.gif)
 <br><br>
